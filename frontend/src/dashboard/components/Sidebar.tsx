import React, { ReactNode } from "react";
import { useDispatch, useSelector } from "react-redux";
import { close } from "../slices/sidebarDrawer";
import { NavLink } from "react-router";

const sidebarMenu: {
  title: string;
  redirect: string;
  svg: ReactNode;
}[] = [
  {
    title: "dashboard",
    redirect: "/dashboard",
    svg: (
      <svg
        width=""
        height=""
        viewBox="0 0 20 20"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <g clip-path="url(#clip0_147_80)">
          <path
            d="M19.4602 8.69904C19.4598 8.69858 19.4593 8.69812 19.4588 8.69766L11.3004 0.539551C10.9527 0.19165 10.4903 0 9.99855 0C9.50676 0 9.04442 0.191498 8.69652 0.539398L0.542379 8.69339C0.539632 8.69614 0.536886 8.69904 0.534139 8.70178C-0.179972 9.42001 -0.178751 10.5853 0.537649 11.3017C0.86495 11.6292 1.29723 11.8188 1.75942 11.8387C1.77819 11.8405 1.79711 11.8414 1.81618 11.8414H2.14135V17.8453C2.14135 19.0334 3.10799 20 4.29635 20H7.48818C7.81166 20 8.07412 19.7377 8.07412 19.4141V14.707C8.07412 14.1649 8.51509 13.7239 9.05724 13.7239H10.9399C11.482 13.7239 11.923 14.1649 11.923 14.707V19.4141C11.923 19.7377 12.1853 20 12.5089 20H15.7008C16.8891 20 17.8558 19.0334 17.8558 17.8453V11.8414H18.1573C18.6489 11.8414 19.1113 11.6499 19.4593 11.302C20.1765 10.5844 20.1768 9.41711 19.4602 8.69904Z"
            fill="#2D60FF"
          />
        </g>
        <defs>
          <clipPath id="clip0_147_80">
            <rect width="20" height="20" fill="white" />
          </clipPath>
        </defs>
      </svg>
    ),
  },

  {
    title: "Blogs",
    redirect: "/dashboard/blogs",
    svg: (
      <svg
        width=""
        height=""
        viewBox="0 0 20 20"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <g clip-path="url(#clip0_147_48)">
          <path
            d="M4.16663 18.3334C4.16715 18.7753 4.34291 19.1989 4.65536 19.5113C4.96781 19.8238 5.39143 19.9996 5.83329 20.0001H14.1666C14.6085 19.9996 15.0321 19.8238 15.3446 19.5113C15.657 19.1989 15.8328 18.7753 15.8333 18.3334V17.6042H4.16663V18.3334Z"
            fill="#B1B1B1"
          />
          <path
            d="M15.8333 1.66667C15.8328 1.2248 15.657 0.801181 15.3446 0.488734C15.0321 0.176287 14.6085 0.000523784 14.1666 0L5.83329 0C5.39143 0.000523784 4.96781 0.176287 4.65536 0.488734C4.34291 0.801181 4.16715 1.2248 4.16663 1.66667V2.5H15.8333V1.66667Z"
            fill="#B1B1B1"
          />
          <path
            d="M19.7678 5.36052L17.2678 2.75635L16.0655 3.91051L17.1114 5.0001H15.8333V6.66677H17.2013L16.0901 7.73177L17.2432 8.9351L19.7432 6.53927C19.8223 6.46351 19.8856 6.37291 19.9296 6.27266C19.9737 6.1724 19.9975 6.06445 19.9998 5.95498C20.0021 5.84551 19.9827 5.73667 19.9429 5.63467C19.9031 5.53266 19.8436 5.4395 19.7678 5.36052Z"
            fill="#B1B1B1"
          />
          <path
            d="M13.3333 4.99992H15.8333V3.33325H4.16663V13.3333H6.66663V14.9999H4.16663V16.6666H15.8333V6.66659H13.3333V4.99992ZM12.5 8.33325H9.58329C9.47279 8.33325 9.36681 8.37715 9.28866 8.45529C9.21052 8.53343 9.16663 8.63941 9.16663 8.74992C9.16663 8.86043 9.21052 8.96641 9.28866 9.04455C9.36681 9.12269 9.47279 9.16659 9.58329 9.16659H10.4166C10.9333 9.16607 11.4317 9.35754 11.8151 9.70383C12.1985 10.0501 12.4396 10.5265 12.4915 11.0405C12.5434 11.5546 12.4025 12.0696 12.0961 12.4855C11.7897 12.9015 11.3396 13.1888 10.8333 13.2916V14.1666H9.16663V13.3333H7.49996V11.6666H10.4166C10.5271 11.6666 10.6331 11.6227 10.7113 11.5445C10.7894 11.4664 10.8333 11.3604 10.8333 11.2499C10.8333 11.1394 10.7894 11.0334 10.7113 10.9553C10.6331 10.8772 10.5271 10.8333 10.4166 10.8333H9.58329C9.06665 10.8338 8.56824 10.6423 8.18482 10.296C7.8014 9.94973 7.56034 9.47332 7.50841 8.95929C7.45649 8.44526 7.59742 7.93027 7.90384 7.51431C8.21026 7.09834 8.66031 6.81106 9.16663 6.70825V5.83325H10.8333V6.66659H12.5V8.33325Z"
            fill="#B1B1B1"
          />
          <path
            d="M2.79862 13.3333L3.90987 12.2683L2.75674 11.0649L0.256745 13.4608C0.177692 13.5365 0.114344 13.6271 0.0703209 13.7274C0.0262982 13.8276 0.00246423 13.9356 0.000181182 14.0451C-0.00210186 14.1545 0.0172108 14.2634 0.0570153 14.3654C0.0968199 14.4674 0.156336 14.5605 0.232162 14.6395L2.73216 17.2437L3.93445 16.0895L2.88852 14.9999H4.16664V13.3333H2.79862Z"
            fill="#B1B1B1"
          />
        </g>
        <defs>
          <clipPath id="clip0_147_48">
            <rect width="20" height="20" fill="white" />
          </clipPath>
        </defs>
      </svg>
    ),
  },

  {
    title: "Home",
    redirect: "/",
    svg: (
      <svg
        width=""
        height=""
        viewBox="0 0 20 20"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <g clip-path="url(#clip0_147_69)">
          <path
            d="M9.85748 9.63406C11.181 9.63406 12.3271 9.15936 13.2635 8.22278C14.2 7.28635 14.6747 6.14057 14.6747 4.81688C14.6747 3.49364 14.2 2.34771 13.2634 1.41097C12.3268 0.474699 11.1809 0 9.85748 0C8.53378 0 7.388 0.474699 6.45157 1.41113C5.51514 2.34756 5.04028 3.49349 5.04028 4.81688C5.04028 6.14057 5.51514 7.2865 6.45172 8.22293C7.38831 9.1592 8.53424 9.63406 9.85748 9.63406Z"
            fill="#B1B1B1"
          />
          <path
            d="M18.2863 15.3789C18.2593 14.9891 18.2047 14.564 18.1242 14.1151C18.0431 13.6629 17.9385 13.2353 17.8134 12.8445C17.6842 12.4406 17.5084 12.0418 17.2911 11.6595C17.0656 11.2628 16.8007 10.9174 16.5034 10.6331C16.1926 10.3357 15.8121 10.0966 15.372 9.92218C14.9335 9.74869 14.4475 9.6608 13.9276 9.6608C13.7234 9.6608 13.526 9.74457 13.1447 9.99283C12.91 10.1459 12.6355 10.3229 12.3291 10.5186C12.0671 10.6856 11.7122 10.842 11.2738 10.9836C10.8461 11.122 10.4118 11.1922 9.98322 11.1922C9.5546 11.1922 9.12048 11.122 8.69232 10.9836C8.25439 10.8421 7.89948 10.6857 7.63779 10.5188C7.33429 10.3249 7.05963 10.1479 6.82144 9.99267C6.44058 9.74441 6.24298 9.66064 6.03882 9.66064C5.5188 9.66064 5.03296 9.74869 4.59457 9.92233C4.15482 10.0964 3.77411 10.3355 3.46298 10.6332C3.16589 10.9177 2.90085 11.263 2.67563 11.6595C2.4585 12.0418 2.28271 12.4405 2.15332 12.8447C2.02835 13.2355 1.92383 13.6629 1.84265 14.1151C1.76224 14.5634 1.70761 14.9887 1.6806 15.3793C1.65405 15.762 1.64062 16.1592 1.64062 16.5603C1.64062 17.6043 1.9725 18.4495 2.62695 19.0728C3.27332 19.6879 4.12857 20 5.16861 20H14.7987C15.8388 20 16.6937 19.6881 17.3402 19.0728C17.9948 18.45 18.3267 17.6046 18.3267 16.5602C18.3266 16.1572 18.313 15.7597 18.2863 15.3789Z"
            fill="#B1B1B1"
          />
        </g>
        <defs>
          <clipPath id="clip0_147_69">
            <rect width="20" height="20" fill="white" />
          </clipPath>
        </defs>
      </svg>
    ),
  },

  {
    title: "Logout",
    redirect: "/login",
    svg: (
      <svg
        width=""
        height=""
        viewBox="0 0 20 20"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <g clip-path="url(#clip0_147_69)">
          <path
            d="M9.85748 9.63406C11.181 9.63406 12.3271 9.15936 13.2635 8.22278C14.2 7.28635 14.6747 6.14057 14.6747 4.81688C14.6747 3.49364 14.2 2.34771 13.2634 1.41097C12.3268 0.474699 11.1809 0 9.85748 0C8.53378 0 7.388 0.474699 6.45157 1.41113C5.51514 2.34756 5.04028 3.49349 5.04028 4.81688C5.04028 6.14057 5.51514 7.2865 6.45172 8.22293C7.38831 9.1592 8.53424 9.63406 9.85748 9.63406Z"
            fill="#B1B1B1"
          />
          <path
            d="M18.2863 15.3789C18.2593 14.9891 18.2047 14.564 18.1242 14.1151C18.0431 13.6629 17.9385 13.2353 17.8134 12.8445C17.6842 12.4406 17.5084 12.0418 17.2911 11.6595C17.0656 11.2628 16.8007 10.9174 16.5034 10.6331C16.1926 10.3357 15.8121 10.0966 15.372 9.92218C14.9335 9.74869 14.4475 9.6608 13.9276 9.6608C13.7234 9.6608 13.526 9.74457 13.1447 9.99283C12.91 10.1459 12.6355 10.3229 12.3291 10.5186C12.0671 10.6856 11.7122 10.842 11.2738 10.9836C10.8461 11.122 10.4118 11.1922 9.98322 11.1922C9.5546 11.1922 9.12048 11.122 8.69232 10.9836C8.25439 10.8421 7.89948 10.6857 7.63779 10.5188C7.33429 10.3249 7.05963 10.1479 6.82144 9.99267C6.44058 9.74441 6.24298 9.66064 6.03882 9.66064C5.5188 9.66064 5.03296 9.74869 4.59457 9.92233C4.15482 10.0964 3.77411 10.3355 3.46298 10.6332C3.16589 10.9177 2.90085 11.263 2.67563 11.6595C2.4585 12.0418 2.28271 12.4405 2.15332 12.8447C2.02835 13.2355 1.92383 13.6629 1.84265 14.1151C1.76224 14.5634 1.70761 14.9887 1.6806 15.3793C1.65405 15.762 1.64062 16.1592 1.64062 16.5603C1.64062 17.6043 1.9725 18.4495 2.62695 19.0728C3.27332 19.6879 4.12857 20 5.16861 20H14.7987C15.8388 20 16.6937 19.6881 17.3402 19.0728C17.9948 18.45 18.3267 17.6046 18.3267 16.5602C18.3266 16.1572 18.313 15.7597 18.2863 15.3789Z"
            fill="#B1B1B1"
          />
        </g>
        <defs>
          <clipPath id="clip0_147_69">
            <rect width="20" height="20" fill="white" />
          </clipPath>
        </defs>
      </svg>
    ),
  },
];

function SidebarMenu() {
  const dispatch = useDispatch();

  return (
    <div className="flex flex-col gap-9 mt-12 xl:gap-10">
      {sidebarMenu.map((menu, index) => (
        <React.Fragment key={index}>
          <NavLink
            onClick={() => {
              dispatch(close());
              if (menu.title === "Logout") {
                localStorage.removeItem("tokenJwt");
              } else {
                return;
              }
            }}
            to={menu.redirect}
            end={menu.redirect === "/dashboard"}
            className={({ isActive }) =>
              `flex gap-5 items-center px-6 relative xl:gap-[26px] xl:px-11 ${
                isActive
                  ? "before:h-[50px] xl:before:h-[60px] before:w-[5px] xl:before:w-[56x] before:absolute before:left-0 before:top-1/2 before:-translate-y-1/2 before:content-[] before:bg-primary-3 before:rounded-tr-[10px] before:rounded-br-[10px]"
                  : ""
              }`
            }
          >
            {({ isActive }) => (
              <>
                <div
                  className={`w-5 h-5 xl:w-[25px] xl:h-[25px] ${
                    isActive ? "active-svg" : "inactive-svg"
                  }`}
                >
                  {menu.svg}
                </div>
                <p
                  className={`text-base font-medium capitalize transition-all xl:text-lg ${
                    isActive ? "text-primary-3" : "text-gray-b1"
                  }`}
                >
                  {menu.title}
                </p>
              </>
            )}
          </NavLink>
        </React.Fragment>
      ))}
    </div>
  );
}

export function SidebarDrawer() {
  const dispatch = useDispatch();
  const isOpenSidebar = useSelector((state: any) => state.openSidebarDrawer);

  return (
    <div
      className={`sidebar-drawer fixed top-0 left-0 right-0 bottom-0 w-full bg-white py-6 transition z-10 ${
        isOpenSidebar ? "translate-x-0" : "translate-x-full"
      }`}
    >
      <div className="flex justify-between items-center px-6">
        <img src="/icons/dashboard/logo.svg" alt="" />
        <button onClick={() => dispatch(close())} className="cursor-pointer">
          Close
        </button>
      </div>

      <SidebarMenu />
    </div>
  );
}

export function Sidebar() {
  return (
    <>
      <div className="fixed left-0 top-0 bottom-0 w-[231px] xl:w-[250px] hidden lg:inline-block bg-white border-r-[2px] border-[#E6EFF5]">
        <img
          src="/icons/dashboard/logo.svg"
          alt=""
          className="pt-6 px-6 xl:pt-[31px] xl:px-[38px]"
        />

        <SidebarMenu />
      </div>
    </>
  );
}
